class Solution {
public:
    ListNode *reverseLinkedListInK(ListNode *head,int k) {
        if(head == NULL || k == 1) return head;

        ListNode *dummy = new ListNode(-1);
        dummy -> next = head;
        ListNode *prev = dummy;
        ListNode *current = dummy;
        ListNode *next = dummy;
        int count = 0;
        
        ListNode *temp = head;
        while(temp != NULL) {
            temp = temp -> next;
            count++;
        }
        while(count >= k){
            current = prev -> next;
            next = current -> next;
            for(int i = 1 ; i < k ; i++){
                current -> next = next -> next;
                next -> next = prev -> next;
                prev -> next = next;
                next = current -> next;
            }
            prev = current;
            count -= k;
        }
        return dummy -> next;
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        return reverseLinkedListInK(head, k);
    }
};

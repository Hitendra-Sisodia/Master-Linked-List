
class Solution{
    public:
    void insertAtTail(Node * &head,Node * &tail,int data) {
        Node *newNode = new Node(data);
        if(head == NULL){
            head = newNode;
            tail = newNode;
            return ;
        }
        else{
            tail -> next = newNode;
            tail = newNode;
        }
    }
    Node *copyLinkedList(Node *head) {
        Node *cloneHead = NULL;
        Node *cloneTail = NULL;
        Node *temp = head;
        // step1: creating clone list
        while(temp != NULL){
            insertAtTail(cloneHead,cloneTail,temp -> data);
            temp = temp -> next;
        }
        // step2: changing the nexts
        Node *originalNode = head;
        Node *cloneNode = cloneHead;
        while(originalNode != NULL && cloneNode != NULL) {
            Node *next = originalNode -> next;
            originalNode -> next = cloneNode;
            originalNode = next;
            
            next = cloneNode -> next;
            cloneNode -> next = originalNode;
            cloneNode = next;
        }
        // step3: changing arb pointers
        temp = head;
        while(temp != NULL){
            if(temp -> arb != NULL) temp -> next -> arb = temp -> arb -> next;
            else temp -> next -> arb = temp -> arb;
            temp = temp -> next -> next;
        }
        // step4: undo step2 changes
        originalNode = head;
        cloneNode = cloneHead;
        while(originalNode != NULL && cloneNode != NULL) {
            originalNode -> next = cloneNode -> next;
            originalNode = originalNode -> next;
            
            if(originalNode != NULL) cloneNode -> next = originalNode -> next;
            cloneNode = cloneNode -> next;
        }
        return cloneHead;
    }
    Node *copyList(Node *head){
        return copyLinkedList(head);
    }
};
